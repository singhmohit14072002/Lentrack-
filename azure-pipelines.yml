# Azure DevOps Pipeline for Multi-Environment Static Web App Deployment
# Deploys both dev and master branches to single Azure Static Web App

trigger:
  branches:
    include:
      - master
      - dev
  paths:
    exclude:
      - README.md
      - DEPLOYMENT.md

pr:
  branches:
    include:
      - master
      - dev

variables:
  # Azure Static Web App Configuration
  staticWebAppName: 'Front-01'
  resourceGroupName: 'Practice_RG'
  
  # Environment-specific variables
  ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/master') }}:
    environmentName: 'production'
    environmentDisplayName: 'Production'
    deploymentPath: '/'
  ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/dev') }}:
    environmentName: 'development'
    environmentDisplayName: 'Development'
    deploymentPath: '/staging'
  ${{ if ne(variables['Build.SourceBranch'], 'refs/heads/master') }}:
    ${{ if ne(variables['Build.SourceBranch'], 'refs/heads/dev') }}:
      environmentName: 'staging'
      environmentDisplayName: 'Staging (PR)'
      deploymentPath: '/pr-$(System.PullRequest.PullRequestNumber)'

stages:
- stage: BuildAndDeploy
  displayName: 'Build and Deploy $(environmentDisplayName)'
  jobs:
  - deployment: DeployStaticWebApp
    displayName: 'Deploy to $(environmentDisplayName)'
    environment: '$(environmentDisplayName)'
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
            fetchDepth: 0

          - task: AzureStaticWebApp@0
            displayName: 'Deploy Static Web App'
            inputs:
              app_location: '/'
              api_location: ''
              output_location: ''
              skip_app_build: true
              azure_static_web_apps_api_token: $(AZURE_STATIC_WEB_APPS_API_TOKEN)

          - script: |
              echo "ðŸŽ‰ Deployment completed successfully!"
              echo "Environment: $(environmentDisplayName)"
              echo "Branch: $(Build.SourceBranchName)"
              echo "Deployment Path: $(deploymentPath)"
              echo "Build ID: $(Build.BuildId)"
            displayName: 'Deployment Summary'

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Deployment Artifacts'
            inputs:
              pathToPublish: '.'
              artifactName: '$(environmentDisplayName)-$(Build.BuildId)'
              publishLocation: 'Container'
